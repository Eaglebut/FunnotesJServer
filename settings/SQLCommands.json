{
  "create_database": [
    "\nCREATE DOMAIN public.email_type AS text\n\tCONSTRAINT email_type_check CHECK ((VALUE ~ '.+@.+\\..+'::text));\n",
    "CREATE DOMAIN public.name_type AS text\n\tCONSTRAINT first_letter_check CHECK ((VALUE ~ '^[A-ZА-Я][a-zа-я]+(-[A-ZА-Я]?[a-zа-я]+)*$'::text));",
    "CREATE TABLE public.events (\n    id integer NOT NULL,\n    user_id integer NOT NULL,\n    start_time timestamp without time zone NOT NULL,\n    end_time timestamp without time zone,\n    title text NOT NULL,\n    description text\n);",
    "CREATE SEQUENCE public.events_id_seq\n    AS integer\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\n",
    "CREATE TABLE public.users (\n    id integer NOT NULL,\n    name public.name_type,\n    surname public.name_type,\n    registration_time timestamp without time zone DEFAULT now() NOT NULL,\n    email public.email_type NOT NULL,\n    password text NOT NULL\n);",
    "CREATE SEQUENCE public.users_id_seq\n    AS integer\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;",
    "ALTER TABLE ONLY public.events ALTER COLUMN id SET DEFAULT nextval('public.events_id_seq'::regclass);",
    "ALTER TABLE ONLY public.users ALTER COLUMN id SET DEFAULT nextval('public.users_id_seq'::regclass);",
    "ALTER TABLE ONLY public.events\n    ADD CONSTRAINT events_pkey PRIMARY KEY (id);",
    "ALTER TABLE ONLY public.users\n    ADD CONSTRAINT unique_email UNIQUE (email);",
    "ALTER TABLE ONLY public.users\n    ADD CONSTRAINT users_pkey PRIMARY KEY (id);",
    "CREATE INDEX fki_user_id_foreign_key ON public.events USING btree (user_id);",
    "ALTER TABLE ONLY public.events\n    ADD CONSTRAINT user_id_foreign_key FOREIGN KEY (user_id) REFERENCES public.users(id) ON UPDATE CASCADE ON DELETE CASCADE NOT VALID;\n"
  ],
  "get_user": [
    "SELECT * FROM users WHERE email = '",
    null,
    "' AND password = '",
    null,
    "'"
  ],
  "insert_user": [
    "INSERT INTO public.users(\n\tname, surname, email, password)\n\tVALUES ('",
    null,
    "','",
    null,
    "', '",
    null,
    "', '",
    null,
    "')"
  ],
  "delete_user": [
    "DELETE FROM public.users\n\tWHERE id = ",
    null,
    ";"
  ],
  "update_user": [
    "UPDATE public.users\n\tSET name='",
    null,
    "', surname='",
    null,
    "', email='",
    null,
    "', password='",
    null,
    "'\n\tWHERE id = ",
    null,
    ";"
  ],
  "get_event": [
    "SELECT id, user_id, start_time, end_time, title, description\n\tFROM public.events\n\tWHERE user_id = ",
    null,
    " AND id = ",
    null,
    ";"
  ],
  "insert_event": [
    "INSERT INTO public.events(\n\t user_id, start_time, end_time, title, description)\n\tVALUES (",
    null,
    ",TO_TIMESTAMP(",
    null,
    "),TO_TIMESTAMP(",
    null,
    "),'",
    null,
    "','",
    null,
    "');"
  ],
  "get_user_events": [
    "SELECT id, user_id, start_time, end_time, title, description\n\tFROM public.events WHERE user_id = ",
    null,
    ";"
  ],
  "update_event": [
    "UPDATE public.events\n\tSET start_time = TO_TIMESTAMP(",
    null,
    "), end_time= TO_TIMESTAMP(",
    null,
    "), title='",
    null,
    "', description='",
    null,
    "'\n\tWHERE user_id = ",
    null,
    " and id = ",
    null,
    ";"
  ],
  "delete_event": [
    "DELETE FROM public.events\n\tWHERE user_id = ",
    null,
    " and id = ",
    null,
    ";"
  ]
}